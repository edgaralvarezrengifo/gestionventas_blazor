<div class="row">
    <fieldset class="border p-2">
        @if (option.Equals("Edit"))
        {
<legend class="w-auto">Editar Venta</legend> }
        else
        {
<legend class="w-auto">Registrar Venta</legend>}
        
    <EditForm Model="newSaleDto" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label>Cliente:</label>
                    <InputSelect class="form-control" @bind-Value="@newSaleDto.ClientId">
                        @foreach (var cli in Clients)
                        {
                            <option value="@cli.Id">@cli.name @cli.lastname</option>}
                    </InputSelect>

                </div>
            </div>
        </div>

        <div class="row">
    
            <div class="col-md-6">
                <div class="form-group">
                    <label>Producto:</label>
                    <InputSelect class="form-control" @bind-Value="@productId">
                        @foreach (var product in Products)
                        {
        <option value="@product.Id">@product.name </option>}
                    </InputSelect>

                </div>
            </div>
            <div class="col-md-6">
                <div class="input-group">
                    <div class="form-group">
                        <label>Cantidad:</label>
                        <InputNumber class="form-control" @bind-Value="@cantidad" />
                        <a class="btn btn-outline-primary"   @onclick="@AddProductSelected">Add</a>
                    </div>
                    </div>
                </div>
            </div>
        
        <div class="row">
            <div class="col-md-10">
                <label>Productos Seleccionados:</label>
                <GenericList TList="newSaleDto.Products">
                    <Records>
                        <table class="table table-striped" style="width:100%">
                            <thead>
                                <tr>
                                    <th>Cod Producto</th>
                                    <th>Nombre Producto</th>
                                    <th>Cantidad</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var forecast in newSaleDto.Products)
                                {
            <tr>

                <td>@forecast.Id</td>
                <td>@forecast.productname</td>
                <td>@forecast.count </td>

                <td>
                </td>
            </tr>
}
                            </tbody>
                        </table>
                    </Records>
                </GenericList>
            </div>
        </div>

        <button class="btn btn-outline-success" type="submit">Guardar</button>
    </EditForm>
    </fieldset>
</div>

@code { 
    [Parameter] public newSaleDTO newSaleDto{ get; set; }
    [Parameter] public List<ProductDTO> Products { get; set; }
    [Parameter] public List<ClientDTO> Clients { get; set; }
    [Parameter] public string clientId { get; set; }
    [Parameter] public string productId { get; set; }
    [Parameter] public string option { get; set; }
    [Parameter] public int cantidad { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    public void DeleteProductSelected(ProductSelected pro)
    {
        newSaleDto.Products.Remove(pro);
    }


    public void AddProductSelected()
    {


        int id = Convert.ToInt32(productId);
        ProductSelected pro = new ProductSelected();
        pro.Id = id;
        pro.productname = Products.Where(x => x.Id == id).Select(x => x.name).FirstOrDefault();
        pro.count = cantidad;
        pro.totalprice =cantidad * Products.Where(x => x.Id == id).Select(x => x.unitprice).FirstOrDefault();
        newSaleDto.Products.Add(pro);
    }

    }